// =====================================================
// SCRIPT PARA PROBAR INTEGRACI√ìN CON BOT DE WHATSAPP
// =====================================================

const axios = require('axios');

const API_BASE = 'http://localhost:3023/api/auth';

async function testBotStatus() {
  console.log('üîç Verificando estado del bot de WhatsApp...');
  
  try {
    const response = await axios.get(`${API_BASE}/bot-status`);
    console.log('‚úÖ Estado del bot:', response.data);
    return response.data.success;
  } catch (error) {
    console.error('‚ùå Error verificando bot:', error.message);
    return false;
  }
}

async function testValidarDocumento() {
  console.log('\nüìã Probando validaci√≥n de documento...');
  
  try {
    const response = await axios.post(`${API_BASE}/validar-documento`, {
      documento: '12345678',
      tipoUsuario: 'Admin'
    });
    
    console.log('‚úÖ Validaci√≥n exitosa:', response.data);
    return response.data.data;
  } catch (error) {
    console.error('‚ùå Error en validaci√≥n:', error.response?.data || error.message);
    return null;
  }
}

async function testEnviarCodigo(usuarioData) {
  console.log('\nüì± Probando env√≠o de c√≥digo...');
  
  try {
    const response = await axios.post(`${API_BASE}/enviar-codigo`, {
      idus: usuarioData.idus,
      numeroCelular: usuarioData.numeroCelular
    });
    
    console.log('‚úÖ C√≥digo enviado:', response.data);
    return response.data.data;
  } catch (error) {
    console.error('‚ùå Error enviando c√≥digo:', error.response?.data || error.message);
    return null;
  }
}

async function testVerificarCodigo(usuarioData, codigo) {
  console.log('\nüîê Probando verificaci√≥n de c√≥digo...');
  
  try {
    const response = await axios.post(`${API_BASE}/verificar-codigo`, {
      idus: usuarioData.idus,
      codigo: codigo,
      mantenerSesion: false,
      ipAcceso: '127.0.0.1',
      dispositivo: 'Test Script'
    });
    
    console.log('‚úÖ C√≥digo verificado:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Error verificando c√≥digo:', error.response?.data || error.message);
    return null;
  }
}

async function testVerificarNumero(numero) {
  console.log('\nüìû Probando verificaci√≥n de n√∫mero...');
  
  try {
    const response = await axios.post(`${API_BASE}/verificar-numero`, {
      numeroCelular: numero
    });
    
    console.log('‚úÖ Verificaci√≥n de n√∫mero:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Error verificando n√∫mero:', error.response?.data || error.message);
    return null;
  }
}

async function testAgregarNumero(numero, nombre) {
  console.log('\n‚ûï Probando agregar n√∫mero...');
  
  try {
    const response = await axios.post(`${API_BASE}/agregar-numero`, {
      numeroCelular: numero,
      nombreUsuario: nombre
    });
    
    console.log('‚úÖ N√∫mero agregado:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Error agregando n√∫mero:', error.response?.data || error.message);
    return null;
  }
}

async function main() {
  console.log('üöÄ Iniciando pruebas de integraci√≥n con WhatsApp...\n');
  
  // 1. Verificar estado del bot
  const botOnline = await testBotStatus();
  
  // 2. Validar documento
  const usuarioData = await testValidarDocumento();
  if (!usuarioData) {
    console.log('‚ùå No se pudo validar documento. Aseg√∫rate de ejecutar el SQL primero.');
    return;
  }
  
  // 3. Verificar n√∫mero
  await testVerificarNumero(usuarioData.numeroCelular);
  
  // 4. Agregar n√∫mero si no est√° autorizado
  await testAgregarNumero(usuarioData.numeroCelular, usuarioData.nombres);
  
  // 5. Enviar c√≥digo
  const codigoData = await testEnviarCodigo(usuarioData);
  if (!codigoData) {
    console.log('‚ùå No se pudo enviar c√≥digo.');
    return;
  }
  
  // 6. Verificar c√≥digo
  await testVerificarCodigo(usuarioData, codigoData.codigo);
  
  console.log('\n‚úÖ Pruebas completadas!');
  console.log('\nüìã Resumen:');
  console.log(`- Bot online: ${botOnline ? '‚úÖ' : '‚ùå'}`);
  console.log(`- Usuario validado: ${usuarioData ? '‚úÖ' : '‚ùå'}`);
  console.log(`- C√≥digo enviado: ${codigoData ? '‚úÖ' : '‚ùå'}`);
  
  if (codigoData && codigoData.whatsapp) {
    console.log(`- WhatsApp: ${codigoData.whatsapp.success ? '‚úÖ' : '‚ùå'}`);
    if (codigoData.whatsapp.simulacion) {
      console.log('  (Simulaci√≥n - bot no disponible)');
    }
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  main().catch(console.error);
}

module.exports = {
  testBotStatus,
  testValidarDocumento,
  testEnviarCodigo,
  testVerificarCodigo,
  testVerificarNumero,
  testAgregarNumero
};
